#BlueJ class context
comment0.target=Agenda
comment0.text=\r\n\ Una\ clase\ que\ mantiene\ una\ lista\r\n\ con\ un\ n\u00BA\ arbitrario\ de\ notas.\r\n\ Las\ notas\ se\ numeran\ de\ forma\ externa\ \r\n\ por\ el\ usuario\r\n\ \ \r\n
comment1.params=
comment1.target=Agenda()
comment1.text=\r\n\ Constructor\r\n
comment10.params=str
comment10.target=int\ notasQueContienen(java.lang.String)
comment10.text=\r\n\ contar\ las\ notas\ que\ contienen\ el\ par\u00E1metro\ str\r\n\ utilizando\ for\ mejorado\r\n
comment11.params=str
comment11.target=void\ borrarNotasQueEmpiezanPor(java.lang.String)
comment11.text=\r\n\ \ \ \r\n\ borrar\ las\ notas\ que\ empiezan\ con\ el\ par\u00E1metro\r\n\ utilizando\ un\ iterador\r\n
comment12.params=str
comment12.target=java.util.ArrayList\ acabanEn(java.lang.String)
comment12.text=\r\n\ Devolver\ una\ colecci\u00F3n\ con\ las\ notas\ que\ acaban\ en\ "ria"\r\n\ ordenadas\r\n\ Con\ for\ mejorado\r\n\r\n
comment13.params=
comment13.target=void\ borrarRepetidasV1()
comment13.text=\r\n\ \ Borrar\ las\ notas\ que\ est\u00E9n\ repetidas\r\n\ \ Ordenando\ la\ colecci\u00F3n\ previamente\ ,\ no\ siempre\ nos\ puede\ interesar\r\n
comment14.params=
comment14.target=void\ borrarRepetidasV2()
comment14.text=\r\n\ \ Borrar\ las\ notas\ que\ est\u00E9n\ repetidas\r\n\ \ con\ indexOf\ (sin\ ordenar\ previamente)\r\n
comment15.params=
comment15.target=void\ borrarRepetidasV3()
comment15.text=\r\n\ \ Borrar\ las\ notas\ que\ est\u00E9n\ repetidas\r\n\ \ con\ indexOf\ empezando\ desde\ el\ final\ con\ for\r\n\ \ (sin\ ordenar\ previamente)\r\n
comment16.params=
comment16.target=void\ invertir()
comment16.text=\r\n\ \ Invierte\ la\ lista\ de\ notas\r\n\ Si\ la\ lista\ contiene\ ["comprar\ pan",\ "comprar\ leche",\ "ir\ dentista"]\r\n\ \ despu\u00E9s\ de\ ejecutar\ el\ m\u00E9todo\ contendr\u00E1\ \ [\ "ir\ dentista",\ "comprar\ leche",\ "comprar\ pan"]\r\n
comment17.params=
comment17.target=void\ invertirV2()
comment17.text=\r\n\ \ Invierte\ la\ lista\ de\ notas\r\n\ Si\ la\ lista\ contiene\ ["comprar\ pan",\ "comprar\ leche",\ "ir\ dentista"]\r\n\ \ despu\u00E9s\ de\ ejecutar\ el\ m\u00E9todo\ contendr\u00E1\ \ [\ "ir\ dentista",\ "comprar\ leche",\ "comprar\ pan"]\r\n
comment18.params=
comment18.target=void\ duplicarNotas()
comment18.text=\r\n\ \ Duplica\ cada\ nota\r\n\ \ Si\ la\ lista\ contiene\ ["comprar\ pan",\ "comprar\ leche",\ "ir\ dentista"]\r\n\ \ despu\u00E9s\ de\ ejecutar\ el\ m\u00E9todo\ contendr\u00E1\ \r\n\ \ ["comprar\ pan",\ "comprar\ pan",\ "comprar\ leche",\ "comprar\ leche",\ "ir\ dentista",\ "ir\ dentista"]\r\n\r\n
comment19.params=
comment19.target=void\ reorganizar()
comment19.text=\r\n\ Reorganiza\ aleatoriamenta\ ls\ notas\ de\ la\ agenda\r\n\ Si\ la\ lista\ contiene\ ["comprar\ pan",\ "comprar\ leche",\ "ir\ dentista"]\r\n\ \ despu\u00E9s\ de\ ejecutar\ el\ m\u00E9todo\ podr\u00EDa\ \ contener\ ["comprar\ leche",\ ir\ dentista","comprar\ pan"]\r\n
comment2.params=nota
comment2.target=void\ apuntarNota(java.lang.String)
comment2.text=\r\n\ Almacenar\ una\ nueva\ nota\r\n\ @param\ nota\ La\ nota\ que\ se\ almacena\r\n
comment20.params=
comment20.target=void\ primeraAlFinal()
comment20.text=\r\n\ \ Coloca\ la\ primera\ nota\ al\ final\ de\ la\ lista\ borr\u00E1ndola\ de\ la\ primera\ posici\u00F3n\r\n\r\n
comment21.params=
comment21.target=void\ ultimaAlPrincipio()
comment21.text=\r\n\ \ Coloca\ la\ \u00FAltima\ nota\ al\ principio\ de\ la\ lista\ borr\u00E1ndola\ de\ la\ \u00FAltima\ posici\u00F3n\r\n\r\n
comment22.params=nota
comment22.target=int\ posicionDeLaNota(java.lang.String)
comment22.text=\r\n\ \ Devuelve\ la\ posici\u00F3n\ de\ la\ primera\ ocurrencia\ de\ nota\r\n\r\n
comment23.params=str
comment23.target=void\ borrarNotasAcabanEn(java.lang.String)
comment23.text=\r\n\ \ \ \r\n\ borrar\ las\ notas\ que\ empiezan\ con\ el\ par\u00E1metro\r\n\ utilizando\ un\ for\ mejorado\ \ INCORRECTO\r\n
comment3.params=
comment3.target=int\ numeroNotas()
comment3.text=\r\n\ @return\ El\ n\u00BA\ de\ notas\ actualmente\ almacenadas\r\n
comment4.params=numeroNota
comment4.target=void\ mostrarNota(int)
comment4.text=\r\n\ Mostrar\ una\ nota\r\n\ @param\ numeroNota\ \ El\ n\u00BA\ de\ nota\ a\ mostrar\r\n\ Si\ numeroNota\ incorrecto\ mensaje\ de\ error\r\n
comment5.params=numeroNota
comment5.target=void\ borrarNota(int)
comment5.text=\r\n\ Borrar\ una\ nota\r\n\ Si\ numeroNota\ incorrecto\ mensaje\ de\ error\r\n
comment6.params=
comment6.target=void\ listarNotas()
comment6.text=\r\n\ Mostrar\ todas\ las\ notas\r\n
comment7.params=
comment7.target=void\ listarNotasConForMejorado()
comment7.text=\r\n\ Mostar\ todas\ las\ notas\ con\ un\ for\ mejorado\r\n
comment8.params=
comment8.target=void\ listarNotasConIterador()
comment8.text=\r\n\ Mostar\ todas\ las\ notas\ con\ un\ iterador\r\n
comment9.params=
comment9.target=void\ listarNotasConIteradorV2()
comment9.text=\r\n\ Mostrar\ todas\ las\ notas\ con\ un\ iterador\r\n
numComments=24

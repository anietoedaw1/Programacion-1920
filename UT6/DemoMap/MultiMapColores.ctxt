#BlueJ class context
comment0.target=MultiMapColores
comment1.params=
comment1.target=MultiMapColores()
comment1.text=\r\n\ Constructor\ \ \r\n
comment2.params=nombre\ color
comment2.target=void\ addPersona(java.lang.String,\ java.lang.String)
comment2.text=\r\n\ \ \ A\u00F1ade\ una\ nueva\ persona\ al\ map\ con\ su\ color\ favorito\r\n\ \ \ Si\ la\ persona\ (clave)\ no\ existe\ se\ crea\ una\ nueva\ entrada\ con\r\n\ \ \ un\ conjunto\ vac\u00EDo\ y\ se\ a\u00F1ade\ el\ color\ al\ conjunto\r\n\ \ \ Si\ la\ persona\ \ (clave)\ existe\ se\ a\u00F1ade\ el\ color\r\n\ \r\n
comment3.params=nombre\ color
comment3.target=void\ addPersonaV2(java.lang.String,\ java.lang.String)
comment3.text=\r\n\ \ \ A\u00F1ade\ una\ nueva\ persona\ al\ map\ con\ su\ color\ favorito\r\n\ \ \ Si\ la\ persona\ (clave)\ no\ exite\ se\ crea\ una\ nueva\ entrada\ con\r\n\ \ \ un\ conjunto\ vac\u00EDo\ y\ se\ a\u00F1ade\ el\ color\ al\ conjunto\r\n\ \ \ Si\ la\ personas\ (clave)\ existe\ se\ a\u00F1ade\ el\ color\r\n\ \r\n
comment4.params=nombre\ color
comment4.target=void\ addPersonaV3(java.lang.String,\ java.lang.String)
comment4.text=\r\n\ \ \ A\u00F1ade\ una\ nueva\ persona\ al\ map\ con\ su\ color\ favorito\r\n\ \ \ Si\ la\ persona\ (clave)\ no\ existe\ se\ crea\ una\ nueva\ entrada\ con\r\n\ \ \ un\ conjunto\ vac\u00EDo\ y\ se\ a\u00F1ade\ el\ color\ al\ conjunto\r\n\ \ \ Si\ la\ personas\ (clave)\ existe\ se\ a\u00F1ade\ el\ color\r\n\ \r\n
comment5.params=
comment5.target=void\ escribirPersonasColores()
comment5.text=\r\n\ Muestra\ el\ nombre\ de\ cada\ persona\ y\ sus\ colores\ favoritos\r\n\ Con\ el\ conjunto\ de\ claves\ y\ un\ for\ mejorado\r\n
comment6.params=color
comment6.target=int\ personasLesGustaColor(java.lang.String)
comment6.text=\r\n\ devuelve\ el\ n\u00BA\ de\ personas\ a\ las\ que\ les\ gusta\ el\ color\ pasado\ como\ par\u00E1metro\r\n\ Con\ el\ conjunto\ de\ entradas\ y\ un\ iterador\r\n
comment7.params=color
comment7.target=java.util.TreeSet\ conjuntoPersonasLesGustaColor(java.lang.String)
comment7.text=\r\n\ devuelve\ un\ conjunto\ ordenado\ con\ los\ nombres\ de\ las\ personas\ a\ las\ que\ les\ gusta\ \r\n\ el\ color\ pasado\ como\ par\u00E1metro\r\n\ Con\ el\ conjunto\ de\ claves\ y\ un\ for\r\n
comment8.params=persona\ color
comment8.target=void\ borrarColor(java.lang.String,\ java.lang.String)
comment8.text=\r\n\ \ Borrar\ el\ color\ que\ le\ gusta\ a\ la\ persona\ indicada\r\n\r\n
comment9.params=persona1\ persona2
comment9.target=java.util.HashSet\ coloresComunes(java.lang.String,\ java.lang.String)
comment9.text=\r\n\ \ Devuelve\ el\ conjunto\ de\ colores\ comunes\ que\ les\ gusta\ a\ persona1\ y\ persona2\r\n\ \ No\ importa\ el\ orden\ en\ el\ conjunto\ resultado\r\n\ \ Si\ no\ hay\ colores\ comunes\ se\ devuelve\ el\ conjunto\ vac\u00EDo\r\n
numComments=10
